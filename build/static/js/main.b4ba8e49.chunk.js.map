{"version":3,"sources":["components/Other/Loader/BigLoader/BigLoader.jsx","PrivateRoute.js","App.js","context/Properties/PropertiesState.js","context/Auth/AuthState.js","context/Users/UsersState.js","context/Customers/CustomersState.js","context/Reports/ReportsState.js","index.js","context/Properties/PropertiesContext.js","context/Customers/CustomersContext.js","components/Other/Notification.jsx","theme.js","context/Users/UsersContext.js","context/Auth/AuthContext.js","context/Reports/ReportsContext.js"],"names":["BigLoader","props","color","w","h","className","PrivateRoute","component","sessionStorage","getItem","to","Section","React","lazy","PropertiesPage","Login","UsersPage","CustomersPage","ReportsPage","App","fallback","path","element","title","PropertiesState","useState","properties","setProperties","addressToAdd","setAddressToAdd","posts","setPosts","addresses","setAddresses","featuresProperty","setFeaturesProperty","imagesPendingToAddForPost","setImagesPendingToAddForPost","propertiesAreLoading","setPropertiesAreLoading","postsAreLoading","setPostsAreLoading","imagesAreLoading","setImagesAreLoading","useEffect","fetchProperties","a","axios","get","then","res","data","catch","error","addProperty","address","post","status","Notification","err","editAddress","addressId","property","find","_id","addAddress","put","newProperties","map","prop","deleteProperty","delete","filter","addDetailsToProperty","withoutNotification","type","media","virtualTour","isForRent","isForSale","saleDate","rentDate","name","comment","description","addVirtualTourToProperty","virtualTourImages","addPost","propertyId","nowWithoutHours","Date","toDateString","startDateWithoutHours","startDate","mercadoLibre","postInMercadolibre","postToSend","category_id","price","forSalePrice","currency_id","available_quantity","buying_mode","listing_type_id","condition","start_time","pictures","source","url","seller_contact","contact","area_code","phone","email","location","address_line","street","city","state","country","zip_code","neighborhood","id","latitude","longitude","attributes","value_name","features","feature","length","buildedSurface","unitMeasurement","totalSurface","addMercadoLibreLinkToPost","permalink","forRentPrice","getPostsByProperty","editPost","postId","images","indexOf","realImage","image","push","deletePost","addFeature","addFeatureToProperty","editFeature","featureId","changePostIsFeature","newState","isFeatured","link","mercadoLibreLink","deleteFeature","feat","getFeaturesByProperty","addMedia","pendingCount","formData","FormData","append","files","resMedia","addMediaToProperty","deleteMedia","m","deleteMediaToProperty","tour","changeInventoryStatus","inventoryId","inventory","inventories","changeReviewStatus","reviewsId","review","forEach","reviews","inv","changeOrderMediaFromProperty","addSurfaceToProperty","surfaceData","addDocumentToProperty","documentId","documents","document","removeDocumentFromProperty","addDocument","editDocument","deleteDocument","doc","PropertiesContext","Provider","value","children","AuthState","userRealName","setUserRealName","userRoles","setUserRoles","authenticateUser","token","setItem","isAuthenticated","getUser","username","user","split","roles","role","AuthContext","logOut","removeItem","UsersState","users","setUsers","setRoles","usersAreLoading","setUsersAreLoading","fetchUsers","fetchRoles","addUser","editUser","userId","editPassword","password","deleteUser","UsersContext","CustomersState","useContext","customers","setCustomers","associatedPropertiesPendingToAdd","setAssociatedPropertiesPendingToAdd","customersAreLoading","setCustomersAreLoading","fetchCustomers","addCustomer","ownerPropertiesObjects","tenantPropertiesObjects","ownerProperties","undefined","ownerPropertiesIds","propertyToAdd","p","internalCode","tenantProperties","tenantPropertiesIds","editCustomer","customerId","customer","deleteCustomer","CustomersContext","ReportsState","propertiesFromDB","setPropertiesFromDB","inventoriesFromDB","setInventoriesFromDB","postsFromDB","setPostsFromDB","fetchInventories","fetchPosts","getPercentage","quantity","comparisonQuantity","Number","isNaN","displayPercent","percent","toPrecision","getSoldPropertiesComparison","yesterday","setDate","getDate","setHours","twoWeekAgo","twoMonthsAgo","twoYearsAgo","yesterdayQuantity","twoWeekAgoQuantity","twoMonthsAgoQuantity","twoYearsAgoQuantity","getTime","getRentedPropertiesComparison","getInventoriesComparison","createdAt","getNewPropertiesComparison","getNewCustomersComparison","getPostsComparison","getAvailablePropertiesComparison","endDate","yesterdayState","twoWeekAgoState","twoMonthAgoState","twoYearAgoState","index","getDay","ReportsContext","getPropertyWithLargestArea","s","sort","b","getPropertyWithLessArea","getCustomerWithMoreProperties","getRentedProperties","today","lastWeek","lastMonth","lastYear","todayQuantity","lastWeekQuantity","lastMonthQuantity","lastYearQuantity","rentedPropertiesComparison","percentageTodayYesterday","percentageLastWeekTwoWeekAgo","percentageLastMonthTwoMonthAgo","percentageLastYearTwoYearsAgo","getSoldProperties","soldPropertiesComparison","getAvailableProperties","todayState","lastWeekState","lastMonthState","lastYearState","propertiesComparison","getInventories","inventoriesComparison","getPosts","postsComparison","getNewProperties","newPropertiesComparison","getNewCustomers","newCustomersComparison","getCustomersWithoutProperties","customersWithoutProperties","ReactDOM","render","StrictMode","theme","getElementById","createContext","duration","createStandaloneToast","toast","position","isClosable","extendTheme","config","styles","global","body","colors","defaultColor","components","Button","variants","solid","_hover","bg","_active","border","Badge","rounded","px","py","mt","textAlign","Tooltip","baseStyle","borderRadius","fontSize"],"mappings":"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","file":"static/js/main.b4ba8e49.chunk.js","sourcesContent":["import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./bigLoader.css\";\r\n\r\nconst BigLoader = (props) => {\r\n  const { color } = props;\r\n  return (\r\n    <>\r\n      <Box w='100%' h='100vh'>\r\n        <Box \r\n          color={color == \"white\" ? \"#fff\" : \"#304580\"}\r\n          className=\"bigLoader\"\r\n        ></Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BigLoader;\r\n","import { Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component }) => {\r\n  const token = sessionStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    return component;\r\n  }\r\n\r\n  return <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport BigLoader from \"./components/Other/Loader/BigLoader/BigLoader\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst Section = React.lazy(() => import(\"./components/Section/Section\"));\r\nconst PropertiesPage = React.lazy(() => import(\"./pages/Properties\"));\r\nconst Login = React.lazy(() => import(\"./pages/Login\"));\r\nconst UsersPage = React.lazy(() => import(\"./pages/Users\"));\r\nconst CustomersPage = React.lazy(() => import(\"./pages/Customers\"));\r\nconst ReportsPage = React.lazy(() => import(\"./pages/Reports\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Suspense fallback={<BigLoader />}>\r\n        <Router>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <PrivateRoute\r\n                  component={\r\n                    <Section title=\"Manejo de Propiedades\">\r\n                      <PropertiesPage />\r\n                    </Section>\r\n                  }\r\n                />\r\n              }\r\n            />\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route\r\n              path=\"/usuarios\"\r\n              element={\r\n                <PrivateRoute\r\n                  component={\r\n                    <Section title=\"Manejo de Usuarios\">\r\n                      <UsersPage />\r\n                    </Section>\r\n                  }\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/propiedades\"\r\n              element={\r\n                <PrivateRoute\r\n                  component={\r\n                    <Section title=\"Manejo de Propiedades\">\r\n                      <PropertiesPage />\r\n                    </Section>\r\n                  }\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/clientes\"\r\n              element={\r\n                <PrivateRoute\r\n                  component={\r\n                    <Section title=\"Manejo de Clientes\">\r\n                      <CustomersPage />\r\n                    </Section>\r\n                  }\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/reportes\"\r\n              element={\r\n                <PrivateRoute\r\n                  component={\r\n                    <Section title=\"Reportes\">\r\n                      <ReportsPage />\r\n                    </Section>\r\n                  }\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n        </Router>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Notification from \"../../components/Other/Notification\";\r\nimport PropertiesContext from \"./PropertiesContext\";\r\n\r\nconst PropertiesState = (props) => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [addressToAdd, setAddressToAdd] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [addresses, setAddresses] = useState([]);\r\n  const [featuresProperty, setFeaturesProperty] = useState([]);\r\n  const [imagesPendingToAddForPost, setImagesPendingToAddForPost] = useState(\r\n    {}\r\n  );\r\n  const [propertiesAreLoading, setPropertiesAreLoading] = useState(true);\r\n  const [postsAreLoading, setPostsAreLoading] = useState(true);\r\n  const [imagesAreLoading, setImagesAreLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchProperties();\r\n  }, []);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const fetchProperties = async () => {\r\n    setPropertiesAreLoading(true);\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/properties`)\r\n      .then((res) => {\r\n        setProperties(res.data);\r\n        setPropertiesAreLoading(false);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addProperty = async (data, address) => {\r\n    data.address = address;\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/properties`, data)\r\n      .then((res) =>\r\n        res.status === 201\r\n          ? (Notification(\r\n              \"Propiedad agregada correctamente\",\r\n              \"Has agregado una nueva propiedad\",\r\n              \"success\"\r\n            ),\r\n            (res.data.address = address),\r\n            setAddressToAdd(null),\r\n            setProperties([...properties, res.data]))\r\n          : null\r\n      )\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al agregar la propiedad\",\r\n          \"Ocurrió un error intentado agregar la propiedad\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const editAddress = async (data, addressId) => {\r\n    let property = properties.find(\r\n      (property) => property.address._id === addressId\r\n    );\r\n    if (!property) {\r\n      return addAddress(data);\r\n    }\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/addresses/${addressId}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Notification(\r\n            \"Dirección editada correctamente\",\r\n            \"Has editado una dirección\",\r\n            \"success\"\r\n          );\r\n          property.address = res.data;\r\n          setAddresses([...addresses, res.data]);\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return { ...property, address: res.data };\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al editar la dirección\",\r\n          \"Ocurrió un error intentado editar la dirección\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const deleteProperty = async (data) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/properties/${data._id}`)\r\n      .then((res) =>\r\n        res.status === 200\r\n          ? (Notification(\r\n              \"Propiedad eliminada correctamente\",\r\n              \"Has eliminado una propiedad\",\r\n              \"success\"\r\n            ),\r\n            setAddressToAdd(null),\r\n            setProperties(\r\n              properties.filter((property) => property._id !== data._id)\r\n            ))\r\n          : null\r\n      )\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al eliminar la propiedad\",\r\n          \"Ocurrió un error intentado eliminar la propiedad\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addAddress = async (data) => {\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/addresses`, data)\r\n      .then((res) =>\r\n        res.status === 201\r\n          ? (Notification(\r\n              \"Dirección agregada correctamente\",\r\n              \"Has agregado una nueva dirección\",\r\n              \"success\"\r\n            ),\r\n            setAddressToAdd(res.data),\r\n            setAddresses([...addresses, res.data]))\r\n          : null\r\n      )\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al agregar la dirección\",\r\n          \"Ocurrió un error intentado agregar la dirección\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addDetailsToProperty = async (data, property, withoutNotification) => {\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${property._id}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          if (!withoutNotification) {\r\n            Notification(\r\n              \"Detalles agregados correctamente\",\r\n              \"Has agregado detalles a una propiedad\",\r\n              \"success\"\r\n            );\r\n          }\r\n          data.type != null && (property.type[0] = data.type);\r\n          data.media != null && (property.media = data.media);\r\n          data.virtualTour != null && (property.virtualTour = data.virtualTour);\r\n          data.isForRent != null && (property.isForRent = data.isForRent);\r\n          data.isForSale != null && (property.isForSale = data.isForSale);\r\n          data.saleDate != null\r\n            ? (property.saleDate = data.saleDate)\r\n            : (property.saleDate = null);\r\n          data.rentDate != null\r\n            ? (property.rentDate = data.rentDate)\r\n            : (property.rentDate = null);\r\n          data.name != null && (property.name = data.name);\r\n          data.comment != null && (property.comment = data.comment);\r\n          data.description != null && (property.description = data.description);\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al agregar detalles a la propiedad\",\r\n          \"Ocurrió un error intentado agregar detalles a la propiedad\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addVirtualTourToProperty = async (virtualTourImages, property) => {\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${property._id}`, {\r\n        virtualTour: virtualTourImages,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Notification(\r\n            \"Virtual tour modificado correctamente\",\r\n            \"Has modificado el virtual tour de una propiedad\",\r\n            \"success\"\r\n          );\r\n          property.virtualTour = virtualTourImages;\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al modificar virtual tour\",\r\n          \"Ocurrió un error intentado modificar el virtual tour de una propiedad\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addPost = async (data, propertyId) => {\r\n    let nowWithoutHours = new Date(new Date().toDateString());\r\n    let startDateWithoutHours = new Date(data.startDate.toDateString());\r\n    if (startDateWithoutHours <= nowWithoutHours) {\r\n      data.status = \"Activa\";\r\n    } else if (startDateWithoutHours > nowWithoutHours) {\r\n      data.status = \"Pendiente\";\r\n    }\r\n    data.property = propertyId;\r\n    if (data.mercadoLibre == false) {\r\n      await axios\r\n        .post(`https://api.ianrodriguezprop.com/posts`, data)\r\n        .then((res) =>\r\n          res.status === 201\r\n            ? (Notification(\r\n                \"Publicación creada correctamente\",\r\n                \"Has creado una nueva publicación\",\r\n                \"success\"\r\n              ),\r\n              setPosts([...posts, res.data]))\r\n            : null\r\n        )\r\n        .catch((error) => {\r\n          Notification(\r\n            \"Error al crear la publicación\",\r\n            \"Ocurrió un error intentado crear la publicación\",\r\n            \"error\"\r\n          );\r\n        });\r\n    } else {\r\n      if (data.isForSale == true) {\r\n        await axios\r\n          .post(`https://api.ianrodriguezprop.com/posts`, data)\r\n          .then((res) =>\r\n            res.status === 201\r\n              ? (Notification(\r\n                  \"Publicación de venta creada correctamente\",\r\n                  \"Has creado una nueva publicación de venta\",\r\n                  \"success\",\r\n                  7000\r\n                ),\r\n                setPosts([...posts, res.data]),\r\n                data.mercadoLibre == true &&\r\n                  postInMercadolibre(res.data, \"venta\"))\r\n              : null\r\n          )\r\n          .catch((error) => {\r\n            if (error.status == 500 || error.status == 400) {\r\n              Notification(\r\n                \"Error al crear la publicación de venta\",\r\n                \"Ocurrió un error intentado crear la publicación de venta\",\r\n                \"error\",\r\n                7000\r\n              );\r\n            }\r\n          });\r\n      }\r\n      if (data.isForRent == true) {\r\n        await axios\r\n          .post(`https://api.ianrodriguezprop.com/posts`, data)\r\n          .then((res) =>\r\n            res.status === 201\r\n              ? (Notification(\r\n                  \"Publicación de alquiler creada correctamente\",\r\n                  \"Has creado una nueva publicación de alquiler\",\r\n                  \"success\",\r\n                  7000\r\n                ),\r\n                setPosts([...posts, res.data]),\r\n                data.mercadoLibre == true &&\r\n                  postInMercadolibre(res.data, \"alquiler\"))\r\n              : null\r\n          )\r\n          .catch((error) => {\r\n            if (error.status == 500 || error.status == 400) {\r\n              Notification(\r\n                \"Error al crear la publicación de alquiler\",\r\n                \"Ocurrió un error intentado crear la publicación de alquiler\",\r\n                \"error\",\r\n                7000\r\n              );\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const postInMercadolibre = async (post, type) => {\r\n    let property = properties.find(\r\n      (property) => property._id === post.property\r\n    );\r\n    if (type == \"venta\") {\r\n      const postToSend = {\r\n        title: post.title,\r\n        category_id: \"MLU1468\",\r\n        price: post.forSalePrice,\r\n        currency_id: \"USD\",\r\n        available_quantity: 1,\r\n        buying_mode: \"classified\",\r\n        listing_type_id: \"silver\",\r\n        condition: \"new\",\r\n        start_time: post.startDate,\r\n        pictures: post.media.map((media) => ({\r\n          source: media.url,\r\n        })),\r\n        seller_contact: {\r\n          contact: \"Ian Rodríguez Propiedades\",\r\n          area_code: \"011\",\r\n          phone: \"11 66 42 34 62\",\r\n          email: \"info@ianrodriguezprop.com\",\r\n        },\r\n        location: {\r\n          address_line:\r\n            property.address.street +\r\n            \", \" +\r\n            property.address.city +\r\n            \", \" +\r\n            property.address.state +\r\n            \", \" +\r\n            property.address.country +\r\n            \", \",\r\n          zip_code: null,\r\n          neighborhood: {\r\n            id: \"TUxBQlBBUzgyNjBa\",\r\n          },\r\n          latitude: null,\r\n          longitude: null,\r\n        },\r\n        attributes: [\r\n          {\r\n            id: \"FULL_BATHROOMS\",\r\n            value_name: property.features.filter(\r\n              (feature) => feature.type[0] === \"Baño\"\r\n            ).length,\r\n          },\r\n          {\r\n            id: \"PARKING_LOTS\",\r\n            value_name: property.features.filter(\r\n              (feature) => feature.type[0] === \"Garaje\"\r\n            ).length,\r\n          },\r\n          {\r\n            id: \"ROOMS\",\r\n            value_name: 0,\r\n          },\r\n          {\r\n            id: \"BEDROOMS\",\r\n            value_name: property.features.filter(\r\n              (feature) => feature.type[0] === \"Dormitorio\"\r\n            ).length,\r\n          },\r\n          {\r\n            id: \"COVERED_AREA\",\r\n            value_name:\r\n              property.buildedSurface + \" \" + property.unitMeasurement,\r\n          },\r\n          {\r\n            id: \"TOTAL_AREA\",\r\n            value_name: property.totalSurface + \" \" + property.unitMeasurement,\r\n          },\r\n        ],\r\n      };\r\n      await axios\r\n        .post(`https://api.ianrodriguezprop.com/mercadolibre`, postToSend)\r\n        .then((res) => {\r\n          if (res.status == 201) {\r\n            Notification(\r\n              \"Publicación en MercadoLibre para venta creada correctamente\",\r\n              \"Deberás efectuar el pago en MercadoLibre para que la publicación sea visible.\",\r\n              \"success\",\r\n              7000\r\n            );\r\n            addMercadoLibreLinkToPost(post, res.data.permalink);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.status == 500 || error.status == 400) {\r\n            Notification(\r\n              \"Error al crear la publicación para venta en MercadoLibre\",\r\n              \"Ocurrió un error intentado crear la publicación en MercadoLibre\",\r\n              \"error\",\r\n              7000\r\n            );\r\n          }\r\n        });\r\n    }\r\n    if (type === \"alquiler\") {\r\n      const postToSend = {\r\n        title: post.title,\r\n        category_id: \"MLU1467\",\r\n        price: post.forRentPrice,\r\n        currency_id: \"USD\",\r\n        available_quantity: 1,\r\n        buying_mode: \"classified\",\r\n        listing_type_id: \"silver\",\r\n        condition: \"new\",\r\n        start_time: post.startDate,\r\n        pictures: post.media.map((media) => ({\r\n          source: media.url,\r\n        })),\r\n        seller_contact: {\r\n          contact: \"Ian Rodríguez Propiedades\",\r\n          area_code: \"011\",\r\n          phone: \"11 66 42 34 62\",\r\n          email: \"info@ianrodriguezprop.com\",\r\n        },\r\n        location: {\r\n          address_line:\r\n            property.address.street +\r\n            \", \" +\r\n            property.address.city +\r\n            \", \" +\r\n            property.address.state +\r\n            \", \" +\r\n            property.address.country +\r\n            \", \",\r\n          zip_code: null,\r\n          neighborhood: {\r\n            id: \"TUxBQlBBUzgyNjBa\",\r\n          },\r\n          latitude: null,\r\n          longitude: null,\r\n        },\r\n        attributes: [\r\n          {\r\n            id: \"FULL_BATHROOMS\",\r\n            value_name: property.features.filter(\r\n              (feature) => feature.type[0] === \"Baño\"\r\n            ).length,\r\n          },\r\n          {\r\n            id: \"PARKING_LOTS\",\r\n            value_name: property.features.filter(\r\n              (feature) => feature.type[0] === \"Garaje\"\r\n            ).length,\r\n          },\r\n          {\r\n            id: \"ROOMS\",\r\n            value_name: 0,\r\n          },\r\n          {\r\n            id: \"BEDROOMS\",\r\n            value_name: property.features.filter(\r\n              (feature) => feature.type[0] === \"Dormitorio\"\r\n            ).length,\r\n          },\r\n          {\r\n            id: \"COVERED_AREA\",\r\n            value_name:\r\n              property.buildedSurface + \" \" + property.unitMeasurement,\r\n          },\r\n          {\r\n            id: \"TOTAL_AREA\",\r\n            value_name: property.totalSurface + \" \" + property.unitMeasurement,\r\n          },\r\n        ],\r\n      };\r\n      await axios\r\n        .post(`https://api.ianrodriguezprop.com/mercadolibre`, postToSend)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            Notification(\r\n              \"Publicación en MercadoLibre para alquiler creada correctamente\",\r\n              \"Deberás efectuar el pago en MercadoLibre para que la publicación sea visible.\",\r\n              \"success\",\r\n              7000\r\n            );\r\n            addMercadoLibreLinkToPost(post, res.data.permalink);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.status == 500 || error.status == 400) {\r\n            Notification(\r\n              \"Error al crear la publicación para alquiler en MercadoLibre\",\r\n              \"Ocurrió un error intentado crear la publicación en MercadoLibre\",\r\n              \"error\",\r\n              7000\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const getPostsByProperty = async (propertyId) => {\r\n    setPostsAreLoading(true);\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/posts/byPropertyId/${propertyId}`)\r\n      .then((res) => {\r\n        setPosts(res.data);\r\n        setPostsAreLoading(false);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const editPost = async (data, postId, propertyId) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/posts/${postId}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Notification(\r\n            \"Publicación editada correctamente\",\r\n            \"Has editado una publicación\",\r\n            \"success\"\r\n          );\r\n          let images = [];\r\n          res.data.media.map((media) => {\r\n            if (property.media.indexOf(media)) {\r\n              let realImage = property.media.find(\r\n                (image) => image._id === media\r\n              );\r\n              images.push(realImage);\r\n            }\r\n          });\r\n          res.data.media = images;\r\n          setPosts([...posts.filter((post) => post._id !== postId), res.data]);\r\n          if (res.data.status == \"Finalizada\" || res.data.status == \"Pausada\") {\r\n            getPostsByProperty(propertyId);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.status == 500 || error.status == 400) {\r\n          Notification(\r\n            \"Error al editar la publicación\",\r\n            \"Ocurrió un error intentado editar la publicación\",\r\n            \"error\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  const deletePost = async (data) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/posts/${data._id}`)\r\n      .then((res) =>\r\n        res.status === 200\r\n          ? (Notification(\r\n              \"Publicación eliminada correctamente\",\r\n              \"Has eliminado una publicación\",\r\n              \"success\"\r\n            ),\r\n            setPosts(posts.filter((post) => post._id !== res.data._id)))\r\n          : null\r\n      )\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al eliminar la publicación\",\r\n          \"Ocurrió un error intentado eliminar la publicación\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addFeature = async (data, propertyId) => {\r\n    let property = properties.find((property) => property._id === propertyId);\r\n    data.property = propertyId;\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/features`, data)\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          Notification(\r\n            \"Característica agregada correctamente\",\r\n            \"Has agregado una nueva característica\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === propertyId) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          property.features = [...property.features, res.data];\r\n          setProperties(newProperties);\r\n          addFeatureToProperty(res.data, propertyId);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al agregar la característica\",\r\n          \"Ocurrió un error intentado agregar la característica\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const editFeature = async (data, featureId, propertyId) => {\r\n    let property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/features/${featureId}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Notification(\r\n            \"Característica editada correctamente\",\r\n            \"Has editado una característica\",\r\n            \"success\"\r\n          );\r\n          property.features = [\r\n            ...property.features.filter((feature) => feature._id !== featureId),\r\n            res.data,\r\n          ];\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === propertyId) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n          addFeatureToProperty(res.data, propertyId);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al editar la característica\",\r\n          \"Ocurrió un error intentado editar la característica\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const changePostIsFeature = async (post, newState) => {\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/posts/${post._id}`, {\r\n        isFeatured: newState,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            newState == true\r\n              ? \"Publicación marcada como destacada correctamente\"\r\n              : \"Publicación quitada de favoritos correctamente\",\r\n            newState == true\r\n              ? \"Has marcado esta publicación como destacada\"\r\n              : \"Has quitado esta publicación de destacados\",\r\n            \"success\"\r\n          );\r\n          post.isFeatured = newState;\r\n          setPosts([\r\n            ...posts.filter((post) => post._id !== res.data._id),\r\n            post,\r\n          ]);\r\n        } else {\r\n          Notification(\r\n            \"Error al marcar la publicación como destacada\",\r\n            \"Ocurrió un error intentado marcar la publicación como destacada\",\r\n            \"error\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addMercadoLibreLinkToPost = async (post, link) => {\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/posts/${post._id}`, {\r\n        mercadoLibreLink: link,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          post.mercadoLibreLink = link;\r\n          setPosts([...posts, post]);\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const deleteFeature = async (feature, property) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/features/${feature._id}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Notification(\r\n            \"Característica eliminada correctamente\",\r\n            \"Has eliminado una característica\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          property.features = property.features.filter(\r\n            (feat) => feat._id !== feature._id\r\n          );\r\n          setProperties(newProperties);\r\n          addFeatureToProperty(res.data, property._id);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al eliminar la característica\",\r\n          \"Ocurrió un error intentado eliminar la característica\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addFeatureToProperty = async (feature, propertyId) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    const features = property.features.map((feature) => {\r\n      return feature._id;\r\n    });\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${propertyId}`, {\r\n        features: [...features],\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getFeaturesByProperty = async (propertyId) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    const features = property.features;\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/features/many`, features)\r\n      .then((res) => {\r\n        setFeaturesProperty(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addMedia = async (data, property, pendingCount) => {\r\n    let formData = new FormData();\r\n    formData.append(\"images\", data.image);\r\n    await axios\r\n      .post(\r\n        `https://api.ianrodriguezprop.com/uploads/${property._id}`,\r\n        formData\r\n      )\r\n      .then(async (res) => {\r\n        data.url = res.data.files[0].url;\r\n        delete data.image;\r\n        await axios\r\n          .post(`https://api.ianrodriguezprop.com/media`, data)\r\n          .then((resMedia) => {\r\n            if (resMedia.status === 201 || res.status === 200) {\r\n              if (pendingCount == 0) {\r\n                Notification(\r\n                  \"Imágenes agregadas correctamente\",\r\n                  \"Has agregado nuevas imágenes\",\r\n                  \"success\"\r\n                );\r\n              }\r\n              property.media = [...property.media, resMedia.data];\r\n              addMediaToProperty(resMedia.data, property);\r\n              const newProperties = properties.map((prop) => {\r\n                if (prop._id === property._id) {\r\n                  return property;\r\n                } else {\r\n                  return prop;\r\n                }\r\n              });\r\n              setProperties(newProperties);\r\n            } else {\r\n              if (pendingCount == 0) {\r\n                Notification(\r\n                  \"Error al agregar imágenes\",\r\n                  \"Ocurrió un error intentado agregar imágenes\",\r\n                  \"error\"\r\n                );\r\n              }\r\n              setImagesAreLoading(false);\r\n            }\r\n          })\r\n          .catch((error) => {})\r\n          .catch((error) => {});\r\n      });\r\n  };\r\n\r\n  const deleteMedia = async (property, image) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/media/${image._id}`)\r\n      .then((resMedia) => {\r\n        if (resMedia.status === 200) {\r\n          Notification(\r\n            \"Imagen eliminada correctamente\",\r\n            \"Has eliminado una imagen\",\r\n            \"success\"\r\n          );\r\n          const newPosts = posts.map((post) => {\r\n            if (\r\n              post.property === property._id ||\r\n              post.property._id === property._id\r\n            ) {\r\n              if (post.status[0] == \"Activa\") {\r\n                post.media = post.media.filter((m) => m._id !== image._id);\r\n                if (post.media.length === 0) {\r\n                  deletePost(post);\r\n                } else {\r\n                  editPost(post, post._id, property._id);\r\n                }\r\n              }\r\n            }\r\n          });\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          property.media = property.media.filter((m) => m._id !== image._id);\r\n          setProperties(newProperties);\r\n          deleteMediaToProperty(property, image);\r\n        } else {\r\n          Notification(\r\n            \"Error al eliminar la imagen\",\r\n            \"Ocurrió un error intentado eliminar la imagen\",\r\n            \"error\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addMediaToProperty = async (data, property) => {\r\n    let images = [];\r\n    images.push(data._id);\r\n    await axios\r\n      .put(\r\n        `https://api.ianrodriguezprop.com/properties/${property._id}/addMedia`,\r\n        images\r\n      )\r\n      .then((resMedia) => {\r\n        setImagesAreLoading(false);\r\n      });\r\n  };\r\n\r\n  const deleteMediaToProperty = async (property, image) => {\r\n    await axios\r\n      .put(\r\n        `https://api.ianrodriguezprop.com/properties/${property._id}/removeMedia`,\r\n        {\r\n          id: image._id,\r\n        }\r\n      )\r\n      .then((resMedia) => {\r\n        if (resMedia.data.virtualTour.find((tour) => tour === image._id)) {\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          property.media = property.media.filter((m) => m._id !== image._id);\r\n          property.virtualTour = property.virtualTour.filter(\r\n            (m) => m._id !== image._id\r\n          );\r\n          addDetailsToProperty(property, property, true);\r\n          setProperties(newProperties);\r\n        }\r\n      });\r\n  };\r\n\r\n  const changeInventoryStatus = async (status, inventoryId, propertyId) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/inventories/${inventoryId}`, {\r\n        status: [status],\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Estado del inventario modificado correctamente\",\r\n            \"Has modicado el estado de un inventario\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          let inventory = property.inventories.find(\r\n            (inventory) => inventory._id === inventoryId\r\n          );\r\n          inventory.status = [status];\r\n          property.inventories = [\r\n            ...property.inventories.filter(\r\n              (inventory) => inventory._id !== inventoryId\r\n            ),\r\n            inventory,\r\n          ];\r\n          setProperties(newProperties);\r\n        } else {\r\n          Notification(\r\n            \"Error al modificar el estado del inventario\",\r\n            \"Ocurrió un error intentado modificar el estado del inventario\",\r\n            \"error\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const changeReviewStatus = async (\r\n    status,\r\n    reviewsId,\r\n    propertyId,\r\n    inventoryId\r\n  ) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/reviews/${reviewsId}`, {\r\n        status: status,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Estado del control modificado correctamente\",\r\n            \"Has modicado el estado de un control\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          let inventory = property.inventories.find(\r\n            (inventory) => inventory._id === inventoryId\r\n          );\r\n          let inventories = property.inventories;\r\n          let review = \"\";\r\n          inventories.forEach((inventory) => {\r\n            review = inventory.reviews.find(\r\n              (review) => review._id === reviewsId\r\n            );\r\n          });\r\n          review.status = status;\r\n          inventory.reviews = [\r\n            ...inventory.reviews.filter((review) => review._id !== reviewsId),\r\n            review,\r\n          ];\r\n          property.inventories = [\r\n            ...property.inventories.filter((inv) => inv._id !== inventory),\r\n            inventory,\r\n          ];\r\n          setProperties(newProperties);\r\n        } else {\r\n          Notification(\r\n            \"Error al modificar el estado del control\",\r\n            \"Ocurrió un error intentado modificar el estado del control\",\r\n            \"error\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const changeOrderMediaFromProperty = async (data, propertyId) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${propertyId}`, {\r\n        media: data,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          Notification(\r\n            \"Orden de las imágenes modificado correctamente\",\r\n            \"Has modificado el orden de las imágenes de una propiedad\",\r\n            \"success\"\r\n          );\r\n          setProperties(newProperties);\r\n          fetchProperties();\r\n        } else {\r\n          Notification(\r\n            \"Error al modificar el orden de las imágenes\",\r\n            \"Ocurrió un error intentado modificar el orden de las imágenes de una propiedad\",\r\n            \"error\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addSurfaceToProperty = async (surfaceData, propertyId) => {\r\n    const property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${propertyId}`, {\r\n        totalSurface: surfaceData.totalSurface,\r\n        buildedSurface: surfaceData.buildedSurface,\r\n        unitMeasurement: surfaceData.unitMeasurement,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Superficie modificada correctamente\",\r\n            \"Has modificado la superficie de una propiedad\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              property.totalSurface = surfaceData.totalSurface;\r\n              property.buildedSurface = surfaceData.buildedSurface;\r\n              property.unitMeasurement = surfaceData.unitMeasurement;\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n        } else {\r\n          Notification(\r\n            \"Error al modificar la superficie\",\r\n            \"Ocurrió un error intentado modificar la superficie de una propiedad\",\r\n            \"error\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addDocumentToProperty = async (documentId, property) => {\r\n    let documents;\r\n    if (property.documents.length > 0) {\r\n      documents = property.documents.map((document) => {\r\n        return document._id;\r\n      });\r\n    }\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${property._id}`, {\r\n        documents:\r\n          property.documents.length > 0\r\n            ? [...documents, documentId]\r\n            : [documentId],\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const removeDocumentFromProperty = async (documentId, property) => {\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/properties/${property._id}`, {\r\n        documents: [\r\n          ...property.documents.filter(\r\n            (document) => document._id !== documentId\r\n          ),\r\n        ],\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addDocument = async (data, propertyId) => {\r\n    let formData = new FormData();\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"documents\", data.files);\r\n    let property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/documents`, formData)\r\n      .then((res) => {\r\n        if (res.status === 201 || res.status === 200) {\r\n          Notification(\r\n            \"Documento agregado correctamente\",\r\n            \"Has agregado un nuevo documento\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === propertyId) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          addDocumentToProperty(res.data[0]._id, property);\r\n          property.documents = [...property.documents, res.data[0]];\r\n          setProperties(newProperties);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al agregar el documento\",\r\n          \"Ocurrió un error intentado agregar el documento\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const editDocument = async (data, documentId, propertyId) => {\r\n    let property = properties.find((property) => property._id === propertyId);\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/documents/${documentId}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Notification(\r\n            \"Documento editado correctamente\",\r\n            \"Has editado un documento\",\r\n            \"success\"\r\n          );\r\n          property.documents = [\r\n            ...property.documents.filter(\r\n              (document) => document._id !== documentId\r\n            ),\r\n            res.data,\r\n          ];\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === propertyId) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          setProperties(newProperties);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al editar el documento\",\r\n          \"Ocurrió un error intentado editar el documento\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const deleteDocument = async (documentId, property) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/documents/${documentId}`)\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Documento eliminado correctamente\",\r\n            \"Has eliminado un documento\",\r\n            \"success\"\r\n          );\r\n          const newProperties = properties.map((prop) => {\r\n            if (prop._id === property._id) {\r\n              return property;\r\n            } else {\r\n              return prop;\r\n            }\r\n          });\r\n          property.documents = property.documents.filter(\r\n            (doc) => doc._id !== documentId\r\n          );\r\n          setProperties(newProperties);\r\n          removeDocumentFromProperty(documentId, property);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al eliminar el documento\",\r\n          \"Ocurrió un error intentado eliminar el documento\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <PropertiesContext.Provider\r\n      value={{\r\n        properties,\r\n        fetchProperties,\r\n        setProperties,\r\n        addressToAdd,\r\n        setAddressToAdd,\r\n        addProperty,\r\n        addAddress,\r\n        deleteProperty,\r\n        deletePost,\r\n        addPost,\r\n        getPostsByProperty,\r\n        posts,\r\n        editAddress,\r\n        addresses,\r\n        addFeature,\r\n        featuresProperty,\r\n        getFeaturesByProperty,\r\n        addMedia,\r\n        addDetailsToProperty,\r\n        deleteFeature,\r\n        editFeature,\r\n        editPost,\r\n        deleteMedia,\r\n        changeInventoryStatus,\r\n        addVirtualTourToProperty,\r\n        imagesPendingToAddForPost,\r\n        setImagesPendingToAddForPost,\r\n        changeReviewStatus,\r\n        addSurfaceToProperty,\r\n        changeOrderMediaFromProperty,\r\n        addDocument,\r\n        editDocument,\r\n        deleteDocument,\r\n        changePostIsFeature,\r\n        propertiesAreLoading,\r\n        postsAreLoading,\r\n        imagesAreLoading,\r\n        setImagesAreLoading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PropertiesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PropertiesState;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport AuthContext from \"./AuthContext\";\r\n\r\nconst AuthState = (props) => {\r\n  const [userRealName, setUserRealName] = useState(\"Usuario\");\r\n  const [userRoles, setUserRoles] = useState(\"\");\r\n\r\n  const authenticateUser = async (data) => {\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/auth/signin`, data)\r\n      .then((res) => {\r\n        if (res.data.token) {\r\n          sessionStorage.setItem(\"token\", res.data.token);\r\n          data.isAuthenticated = true;\r\n          getUser(data.username);\r\n        } else {\r\n          data.isAuthenticated = false;\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getUser = async (username) => {\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/users/`)\r\n      .then((res) => {\r\n        const user = res.data.find((user) => user.username === username);\r\n        sessionStorage.setItem(\"userLoggedName\", user.name.split(\" \")[0]);\r\n        sessionStorage.setItem(\"userLoggedUserName\", user.username);\r\n        let roles = [];\r\n        if (user.roles) {\r\n          user.roles.map((role) => {\r\n            roles.push(role.name);\r\n          });\r\n        }\r\n        sessionStorage.setItem(\"userLoggedRoles\", roles);\r\n        setUserRoles(roles);\r\n        setUserRealName(user.name.split(\" \")[0]);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const logOut = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"userLoggedName\");\r\n    sessionStorage.removeItem(\"userLoggedUserName\");\r\n    sessionStorage.removeItem(\"userLoggedRoles\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        authenticateUser,\r\n        logOut,\r\n        getUser,\r\n        userRealName,\r\n        userRoles,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Notification from \"../../components/Other/Notification\";\r\nimport UsersContext from \"./UsersContext\";\r\n\r\nconst UsersState = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const [usersAreLoading, setUsersAreLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    fetchRoles();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    setUsersAreLoading(true);\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/users`)\r\n      .then((res) => {\r\n        setUsers(res.data);\r\n        setUsersAreLoading(false);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addUser = async (data) => {\r\n    if (data.roles === false) {\r\n      data.roles = [];\r\n    }\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/users`, data)\r\n      .then((res) => {\r\n        if (res.status === 201 || res.status === 200) {\r\n          Notification(\r\n            \"Usuario agregado correctamente\",\r\n            \"Has agregado un nuevo usuario\",\r\n            \"success\"\r\n          );\r\n          setUsers([...users, res.data]);\r\n          fetchUsers();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error agregando usuario\",\r\n          \"Ocurrió un error intentado agregar al usuario\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const editUser = async (data, userId) => {\r\n    if (data.roles === false) {\r\n      data.roles = [];\r\n    }\r\n    if (data.editPassword === false) {\r\n      delete data.password;\r\n    }\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/users/${userId}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Usuario editado correctamente\",\r\n            \"Has editado un usuario\",\r\n            \"success\"\r\n          );\r\n          if (data.username == sessionStorage.getItem(\"userLoggedUserName\")) {\r\n            Notification(\r\n              \"El usuario que editaste es el mismo que estás usando\",\r\n              \"Para ver reflejados los cambios deberás volver a iniciar sesión\",\r\n              \"warning\",\r\n              7000\r\n            );\r\n          }\r\n          setUsers([...users.filter((user) => user._id !== userId), res.data]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al editar usuario\",\r\n          \"Ocurrió un error intentado editar el usuario\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/users/${userId}`)\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Usuario eliminado correctamente\",\r\n            \"Has eliminado un usuario\",\r\n            \"success\"\r\n          );\r\n          setUsers(users.filter((user) => user._id !== res.data._id));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al eliminar el usuario\",\r\n          \"Ocurrió un error intentado eliminar el usuario\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const fetchRoles = async () => {\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/roles`)\r\n      .then((res) => {\r\n        setRoles(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  return (\r\n    <UsersContext.Provider\r\n      value={{\r\n        fetchUsers,\r\n        users,\r\n        addUser,\r\n        editUser,\r\n        deleteUser,\r\n        roles,\r\n        usersAreLoading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UsersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UsersState;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport Notification from \"../../components/Other/Notification\";\r\nimport PropertiesContext from \"../Properties/PropertiesContext\";\r\nimport CustomersContext from \"./CustomersContext\";\r\n\r\nconst CustomersState = (props) => {\r\n  const { properties } = useContext(PropertiesContext);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [\r\n    associatedPropertiesPendingToAdd,\r\n    setAssociatedPropertiesPendingToAdd,\r\n  ] = useState([]);\r\n  const [customersAreLoading, setCustomersAreLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchCustomers = async () => {\r\n    setCustomersAreLoading(true);\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/customers`)\r\n      .then((res) => {\r\n        setCustomers(res.data);\r\n        setCustomersAreLoading(false);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addCustomer = async (data, address) => {\r\n    let ownerPropertiesObjects = [];\r\n    let tenantPropertiesObjects = [];\r\n    if (\r\n      data.ownerProperties !== null &&\r\n      data.ownerProperties !== undefined &&\r\n      data.ownerProperties.length > 0\r\n    ) {\r\n      let ownerPropertiesIds = [];\r\n      data.ownerProperties.map((property) => {\r\n        const propertyToAdd = properties.find(\r\n          (p) => p.internalCode === property\r\n        );\r\n        if (propertyToAdd) {\r\n          ownerPropertiesIds.push(propertyToAdd._id);\r\n          ownerPropertiesObjects.push(propertyToAdd);\r\n        }\r\n      });\r\n      data.ownerProperties = ownerPropertiesIds;\r\n    }\r\n    if (\r\n      data.tenantProperties !== null &&\r\n      data.tenantProperties !== undefined &&\r\n      data.tenantProperties.length > 0\r\n    ) {\r\n      let tenantPropertiesIds = [];\r\n      data.tenantProperties.map((property) => {\r\n        const propertyToAdd = properties.find(\r\n          (p) => p.internalCode === property\r\n        );\r\n        if (propertyToAdd) {\r\n          tenantPropertiesIds.push(propertyToAdd._id);\r\n          tenantPropertiesObjects.push(propertyToAdd);\r\n        }\r\n      });\r\n      data.tenantProperties = tenantPropertiesIds;\r\n    }\r\n    await axios\r\n      .post(`https://api.ianrodriguezprop.com/customers`, data)\r\n      .then((res) =>\r\n        res.status === 201\r\n          ? (Notification(\r\n              \"Cliente agregado correctamente\",\r\n              \"Has agregado un nuevo cliente\",\r\n              \"success\"\r\n            ),\r\n            (res.data.ownerProperties = ownerPropertiesObjects),\r\n            (res.data.tenantProperties = tenantPropertiesObjects),\r\n            setCustomers([...customers, res.data]))\r\n          : null\r\n      )\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al agregar el cliente\",\r\n          \"Ocurrió un error intentado agregar el cliente\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const editCustomer = async (data, customerId) => {\r\n    let ownerPropertiesObjects = [];\r\n    let tenantPropertiesObjects = [];\r\n    if (\r\n      data.ownerProperties !== null &&\r\n      data.ownerProperties !== undefined &&\r\n      data.ownerProperties.length > 0\r\n    ) {\r\n      let ownerPropertiesIds = [];\r\n      data.ownerProperties.map((property) => {\r\n        const propertyToAdd = properties.find(\r\n          (p) => p.internalCode === property\r\n        );\r\n        if (propertyToAdd) {\r\n          ownerPropertiesIds.push(propertyToAdd._id);\r\n          ownerPropertiesObjects.push(propertyToAdd);\r\n        }\r\n      });\r\n      data.ownerProperties = ownerPropertiesIds;\r\n    }\r\n    if (\r\n      data.tenantProperties !== null &&\r\n      data.tenantProperties !== undefined &&\r\n      data.tenantProperties.length > 0\r\n    ) {\r\n      let tenantPropertiesIds = [];\r\n      data.tenantProperties.map((property) => {\r\n        const propertyToAdd = properties.find(\r\n          (p) => p.internalCode === property\r\n        );\r\n        if (propertyToAdd) {\r\n          tenantPropertiesIds.push(propertyToAdd._id);\r\n          tenantPropertiesObjects.push(propertyToAdd);\r\n        }\r\n      });\r\n      data.tenantProperties = tenantPropertiesIds;\r\n    }\r\n    await axios\r\n      .put(`https://api.ianrodriguezprop.com/customers/${customerId}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200 || res.status === 201) {\r\n          Notification(\r\n            \"Cliente editado correctamente\",\r\n            \"Has editado un cliente\",\r\n            \"success\"\r\n          );\r\n          res.data.ownerProperties = ownerPropertiesObjects;\r\n          res.data.tenantProperties = tenantPropertiesObjects;\r\n          setCustomers([\r\n            ...customers.filter((customer) => customer._id !== customerId),\r\n            res.data,\r\n          ]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Notification(\r\n          \"Error al editar el cliente\",\r\n          \"Ocurrió un error intentado editar el cliente\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const deleteCustomer = async (data) => {\r\n    await axios\r\n      .delete(`https://api.ianrodriguezprop.com/customers/${data._id}`)\r\n      .then((res) =>\r\n        res.status === 200\r\n          ? (Notification(\r\n              \"Cliente eliminado correctamente\",\r\n              \"Has eliminado un cliente\",\r\n              \"success\"\r\n            ),\r\n            setCustomers(\r\n              customers.filter((customer) => customer._id !== res.data._id)\r\n            ))\r\n          : null\r\n      )\r\n      .catch((err) => {\r\n        Notification(\r\n          \"Error al eliminar el cliente\",\r\n          \"Ocurrió un error intentado eliminar el cliente\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CustomersContext.Provider\r\n      value={{\r\n        fetchCustomers,\r\n        setCustomers,\r\n        customers,\r\n        addCustomer,\r\n        editCustomer,\r\n        deleteCustomer,\r\n        associatedPropertiesPendingToAdd,\r\n        setAssociatedPropertiesPendingToAdd,\r\n        customersAreLoading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CustomersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CustomersState;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomersContext from \"../Customers/CustomersContext\";\r\nimport ReportsContext from \"./ReportsContext\";\r\nimport axios from \"axios\";\r\n\r\nconst ReportsState = (props) => {\r\n  const { customers } = useContext(CustomersContext);\r\n  const [propertiesFromDB, setPropertiesFromDB] = useState([]);\r\n  const [inventoriesFromDB, setInventoriesFromDB] = useState([]);\r\n  const [postsFromDB, setPostsFromDB] = useState([]);\r\n  const [posts, setPosts] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchProperties();\r\n    fetchInventories();\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const getPercentage = (quantity, comparisonQuantity) => {\r\n    if (comparisonQuantity == 0) {\r\n      return 0;\r\n    } else if (Number.isNaN(quantity / comparisonQuantity)) {\r\n      return 0;\r\n    } else {\r\n      return displayPercent(quantity / comparisonQuantity);\r\n    }\r\n  };\r\n\r\n  const displayPercent = (percent) => {\r\n    if (percent === null || percent === undefined) {\r\n      return 0;\r\n    } else {\r\n      return (percent * 100).toPrecision(2) - 100;\r\n    }\r\n  };\r\n\r\n  const fetchProperties = async () => {\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/properties`)\r\n      .then((res) => {\r\n        setPropertiesFromDB(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const fetchInventories = async () => {\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/inventories`)\r\n      .then((res) => {\r\n        setInventoriesFromDB(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    await axios\r\n      .get(`https://api.ianrodriguezprop.com/posts`)\r\n      .then((res) => {\r\n        setPostsFromDB(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const getPropertyWithLargestArea = () => {\r\n    return propertiesFromDB\r\n      .filter((s) => s.totalSurface)\r\n      .sort((a, b) => b.totalSurface - a.totalSurface)[0];\r\n  };\r\n\r\n  const getPropertyWithLessArea = () => {\r\n    return propertiesFromDB\r\n      .filter((s) => s.totalSurface)\r\n      .sort((a, b) => a.totalSurface - b.totalSurface)[0];\r\n  };\r\n\r\n  const getCustomerWithMoreProperties = () => {\r\n    return customers.sort(\r\n      (a, b) =>\r\n        b.ownerProperties.length +\r\n        b.tenantProperties.length -\r\n        (a.ownerProperties.length + a.tenantProperties.length)\r\n    )[0];\r\n  };\r\n\r\n  const getCustomersWithoutProperties = () => {\r\n    let customersWithoutProperties = [];\r\n\r\n    customers.forEach((customer) => {\r\n      return customer.ownerProperties.length +\r\n        customer.tenantProperties.length ===\r\n        0\r\n        ? customersWithoutProperties.push(customer)\r\n        : null;\r\n    });\r\n    return customersWithoutProperties;\r\n  };\r\n\r\n  const getRentedProperties = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n\r\n    propertiesFromDB.forEach((property) => {\r\n      if (property.rentDate != null) {\r\n        property.rentDate = new Date(property.rentDate);\r\n        property.rentDate.setHours(0, 0, 0, 0);\r\n        if (property.rentDate.getTime() == today.getTime()) {\r\n          todayQuantity++;\r\n        } else if (property.rentDate > lastWeek) {\r\n          lastWeekQuantity++;\r\n        } else if (property.rentDate > lastMonth) {\r\n          lastMonthQuantity++;\r\n        } else if (property.rentDate > lastYear) {\r\n          lastYearQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let rentedPropertiesComparison = getRentedPropertiesComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      rentedPropertiesComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      rentedPropertiesComparison.twoWeekAgoQuantity\r\n    );\r\n\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      rentedPropertiesComparison.twoMonthsAgoQuantity\r\n    );\r\n\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      rentedPropertiesComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let rentedProperties = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return rentedProperties;\r\n  };\r\n\r\n  const getSoldProperties = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n\r\n    propertiesFromDB.forEach((property) => {\r\n      if (property.saleDate != null) {\r\n        property.saleDate = new Date(property.saleDate);\r\n        property.saleDate.setHours(0, 0, 0, 0);\r\n        if (property.saleDate.getTime() == today.getTime()) {\r\n          todayQuantity++;\r\n        } else if (property.saleDate > lastWeek) {\r\n          lastWeekQuantity++;\r\n        } else if (property.saleDate > lastMonth) {\r\n          lastMonthQuantity++;\r\n        } else if (property.saleDate > lastYear) {\r\n          lastYearQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let soldPropertiesComparison = getSoldPropertiesComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      soldPropertiesComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      soldPropertiesComparison.twoWeekAgoQuantity\r\n    );\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      soldPropertiesComparison.twoMonthsAgoQuantity\r\n    );\r\n\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      soldPropertiesComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let soldProperties = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return soldProperties;\r\n  };\r\n\r\n  const getSoldPropertiesComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    propertiesFromDB.forEach((property) => {\r\n      if (property.saleDate != null) {\r\n        property.saleDate = new Date(property.saleDate);\r\n        property.saleDate.setHours(0, 0, 0, 0);\r\n        if (property.saleDate.getTime() == yesterday.getTime()) {\r\n          yesterdayQuantity++;\r\n        } else if (property.saleDate > twoWeekAgo) {\r\n          twoWeekAgoQuantity++;\r\n        } else if (property.saleDate > twoMonthsAgo) {\r\n          twoMonthsAgoQuantity++;\r\n        } else if (property.saleDate > twoYearsAgo) {\r\n          twoYearsAgoQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let soldPropertiesComparison = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return soldPropertiesComparison;\r\n  };\r\n\r\n  const getRentedPropertiesComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    propertiesFromDB.forEach((property) => {\r\n      if (property.rentDate != null) {\r\n        property.rentDate = new Date(property.rentDate);\r\n        property.rentDate.setHours(0, 0, 0, 0);\r\n        if (property.rentDate.getTime() == yesterday.getTime()) {\r\n          yesterdayQuantity++;\r\n        } else if (property.rentDate > twoWeekAgo) {\r\n          twoWeekAgoQuantity++;\r\n        } else if (property.rentDate > twoMonthsAgo) {\r\n          twoMonthsAgoQuantity++;\r\n        } else if (property.rentDate > twoYearsAgo) {\r\n          twoYearsAgoQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let rentedProperties = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return rentedProperties;\r\n  };\r\n\r\n  const getInventories = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n\r\n    inventoriesFromDB.forEach((inventory) => {\r\n      if (inventory.createdAt != null) {\r\n        inventory.createdAt = new Date(inventory.createdAt);\r\n        inventory.createdAt.setHours(0, 0, 0, 0);\r\n        if (inventory.createdAt.getTime() == today.getTime()) {\r\n          todayQuantity++;\r\n        } else if (inventory.createdAt > lastWeek) {\r\n          lastWeekQuantity++;\r\n        } else if (inventory.createdAt > lastMonth) {\r\n          lastMonthQuantity++;\r\n        } else if (inventory.createdAt > lastYear) {\r\n          lastYearQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let inventoriesComparison = getInventoriesComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      inventoriesComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      inventoriesComparison.twoWeekAgoQuantity\r\n    );\r\n\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      inventoriesComparison.twoMonthsAgoQuantity\r\n    );\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      inventoriesComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let inventories = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return inventories;\r\n  };\r\n\r\n  const getInventoriesComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    inventoriesFromDB.forEach((inventory) => {\r\n      if (inventory.createdAt != null) {\r\n        inventory.createdAt = new Date(inventory.createdAt);\r\n        inventory.createdAt.setHours(0, 0, 0, 0);\r\n        if (inventory.createdAt.getTime() == yesterday.getTime()) {\r\n          yesterdayQuantity++;\r\n        } else if (inventory.createdAt > twoWeekAgo) {\r\n          twoWeekAgoQuantity++;\r\n        } else if (inventory.createdAt > twoMonthsAgo) {\r\n          twoMonthsAgoQuantity++;\r\n        } else if (inventory.createdAt > twoYearsAgo) {\r\n          twoYearsAgoQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let inventoriesComparison = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return inventoriesComparison;\r\n  };\r\n\r\n  const getNewProperties = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n\r\n    propertiesFromDB.forEach((property) => {\r\n      if (property.createdAt != null) {\r\n        property.createdAt = new Date(property.createdAt);\r\n        property.createdAt.setHours(0, 0, 0, 0);\r\n        if (property.createdAt.getTime() == today.getTime()) {\r\n          todayQuantity++;\r\n        } else if (property.createdAt > lastWeek) {\r\n          lastWeekQuantity++;\r\n        } else if (property.createdAt > lastMonth) {\r\n          lastMonthQuantity++;\r\n        } else if (property.createdAt > lastYear) {\r\n          lastYearQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let newPropertiesComparison = getNewPropertiesComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      newPropertiesComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      newPropertiesComparison.twoWeekAgoQuantity\r\n    );\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      newPropertiesComparison.twoMonthsAgoQuantity\r\n    );\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      newPropertiesComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let newProperties = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return newProperties;\r\n  };\r\n\r\n  const getNewPropertiesComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    propertiesFromDB.forEach((property) => {\r\n      if (property.createdAt != null) {\r\n        property.createdAt = new Date(property.createdAt);\r\n        property.createdAt.setHours(0, 0, 0, 0);\r\n        if (property.createdAt.getTime() == yesterday.getTime()) {\r\n          yesterdayQuantity++;\r\n        } else if (property.createdAt > twoWeekAgo) {\r\n          twoWeekAgoQuantity++;\r\n        } else if (property.createdAt > twoMonthsAgo) {\r\n          twoMonthsAgoQuantity++;\r\n        } else if (property.createdAt > twoYearsAgo) {\r\n          twoYearsAgoQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let newPropertiesComparison = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return newPropertiesComparison;\r\n  };\r\n\r\n  const getNewCustomers = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n\r\n    customers.forEach((customer) => {\r\n      if (customer.createdAt != null) {\r\n        customer.createdAt = new Date(customer.createdAt);\r\n        customer.createdAt.setHours(0, 0, 0, 0);\r\n        if (customer.createdAt.getTime() == today.getTime()) {\r\n          todayQuantity++;\r\n        } else if (customer.createdAt > lastWeek) {\r\n          lastWeekQuantity++;\r\n        } else if (customer.createdAt > lastMonth) {\r\n          lastMonthQuantity++;\r\n        } else if (customer.createdAt > lastYear) {\r\n          lastYearQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let newCustomersComparison = getNewCustomersComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      newCustomersComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      newCustomersComparison.twoWeekAgoQuantity\r\n    );\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      newCustomersComparison.twoMonthsAgoQuantity\r\n    );\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      newCustomersComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let newCustomers = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return newCustomers;\r\n  };\r\n\r\n  const getNewCustomersComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    customers.forEach((customer) => {\r\n      if (customer.createdAt != null) {\r\n        customer.createdAt = new Date(customer.createdAt);\r\n        customer.createdAt.setHours(0, 0, 0, 0);\r\n        if (customer.createdAt.getTime() == yesterday.getTime()) {\r\n          yesterdayQuantity++;\r\n        } else if (customer.createdAt > twoWeekAgo) {\r\n          twoWeekAgoQuantity++;\r\n        } else if (customer.createdAt > twoMonthsAgo) {\r\n          twoMonthsAgoQuantity++;\r\n        } else if (customer.createdAt > twoYearsAgo) {\r\n          twoYearsAgoQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let newCustomerComparison = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return newCustomerComparison;\r\n  };\r\n\r\n  const getPosts = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n\r\n    postsFromDB.forEach((post) => {\r\n      if (post.createdAt != null) {\r\n        post.createdAt = new Date(post.createdAt);\r\n        post.createdAt.setHours(0, 0, 0, 0);\r\n        if (post.createdAt.getTime() == today.getTime()) {\r\n          todayQuantity++;\r\n        } else if (post.createdAt > lastWeek) {\r\n          lastWeekQuantity++;\r\n        } else if (post.createdAt > lastMonth) {\r\n          lastMonthQuantity++;\r\n        } else if (post.createdAt > lastYear) {\r\n          lastYearQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let postsComparison = getPostsComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      postsComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      postsComparison.twoWeekAgoQuantity\r\n    );\r\n\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      postsComparison.twoMonthsAgoQuantity\r\n    );\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      postsComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let posts = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return posts;\r\n  };\r\n\r\n  const getPostsComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    postsFromDB.forEach((post) => {\r\n      if (post.createdAt != null) {\r\n        post.createdAt = new Date(post.createdAt);\r\n        post.createdAt.setHours(0, 0, 0, 0);\r\n        if (post.createdAt.getTime() == yesterday.getTime()) {\r\n          yesterdayQuantity++;\r\n        } else if (post.createdAt > twoWeekAgo) {\r\n          twoWeekAgoQuantity++;\r\n        } else if (post.createdAt > twoMonthsAgo) {\r\n          twoMonthsAgoQuantity++;\r\n        } else if (post.createdAt > twoYearsAgo) {\r\n          twoYearsAgoQuantity++;\r\n        }\r\n      }\r\n    });\r\n    let postsComparison = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return postsComparison;\r\n  };\r\n\r\n  const getAvailableProperties = () => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let lastWeek = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    let lastMonth = new Date(new Date().setDate(new Date().getDate() - 30));\r\n    let lastYear = new Date(new Date().setDate(new Date().getDate() - 365));\r\n\r\n    let todayQuantity = 0;\r\n    let lastWeekQuantity = 0;\r\n    let lastMonthQuantity = 0;\r\n    let lastYearQuantity = 0;\r\n    postsFromDB.forEach((post) => {\r\n      if (\r\n        post.status[0] != \"Pendiente\" &&\r\n        post.isForRent == true &&\r\n        post.isForSale == true\r\n      ) {\r\n        let startDate = new Date(post.startDate);\r\n        startDate.setHours(0, 0, 0, 0);\r\n        let endDate = new Date(post.endDate);\r\n        endDate.setHours(0, 0, 0, 0);\r\n        let todayState = false;\r\n        let lastWeekState = false;\r\n        let lastMonthState = false;\r\n        let lastYearState = false;\r\n        for (let index = 0; startDate <= endDate; index++) {\r\n          if (startDate.getTime() == today.getTime()) {\r\n            todayState = true;\r\n          } else if (startDate > lastWeek) {\r\n            lastWeekState = true;\r\n          } else if (startDate > lastMonth) {\r\n            lastMonthState = true;\r\n          } else if (startDate > lastYear) {\r\n            lastYearState = true;\r\n          }\r\n          startDate.setDate(startDate.getDate() + 1);\r\n        }\r\n        todayQuantity = todayState == true ? todayQuantity + 1 : todayQuantity;\r\n        lastWeekQuantity =\r\n          lastWeekState == true ? lastWeekQuantity + 1 : lastWeekQuantity;\r\n        lastMonthQuantity =\r\n          lastMonthState == true ? lastMonthQuantity + 1 : lastMonthQuantity;\r\n        lastYearQuantity =\r\n          lastYearState == true ? lastYearQuantity + 1 : lastYearQuantity;\r\n        todayState = false;\r\n        lastWeekState = false;\r\n        lastMonthState = false;\r\n        lastYearState = false;\r\n      }\r\n    });\r\n    let propertiesComparison = getAvailablePropertiesComparison();\r\n    let percentageTodayYesterday = getPercentage(\r\n      todayQuantity,\r\n      propertiesComparison.yesterdayQuantity\r\n    );\r\n    let percentageLastWeekTwoWeekAgo = getPercentage(\r\n      lastWeekQuantity,\r\n      propertiesComparison.twoWeekAgoQuantity\r\n    );\r\n    let percentageLastMonthTwoMonthAgo = getPercentage(\r\n      lastMonthQuantity,\r\n      propertiesComparison.twoMonthsAgoQuantity\r\n    );\r\n    let percentageLastYearTwoYearsAgo = getPercentage(\r\n      lastYearQuantity,\r\n      propertiesComparison.twoYearsAgoQuantity\r\n    );\r\n\r\n    let propertiesReport = {\r\n      todayQuantity,\r\n      lastWeekQuantity,\r\n      lastMonthQuantity,\r\n      lastYearQuantity,\r\n      percentageTodayYesterday,\r\n      percentageLastWeekTwoWeekAgo,\r\n      percentageLastMonthTwoMonthAgo,\r\n      percentageLastYearTwoYearsAgo,\r\n    };\r\n    return propertiesReport;\r\n  };\r\n\r\n  const getAvailablePropertiesComparison = () => {\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    yesterday.setHours(0, 0, 0, 0);\r\n    let twoWeekAgo = new Date(new Date().setDate(new Date().getDate() - 14));\r\n    let twoMonthsAgo = new Date(new Date().setDate(new Date().getDate() - 60));\r\n    let twoYearsAgo = new Date(new Date().setDate(new Date().getDate() - 730));\r\n\r\n    let yesterdayQuantity = 0;\r\n    let twoWeekAgoQuantity = 0;\r\n    let twoMonthsAgoQuantity = 0;\r\n    let twoYearsAgoQuantity = 0;\r\n\r\n    postsFromDB.forEach((post) => {\r\n      if (\r\n        post.status[0] != \"Pendiente\" &&\r\n        post.isForRent == true &&\r\n        post.isForSale == true\r\n      ) {\r\n        let startDate = new Date(post.startDate);\r\n        startDate.setHours(0, 0, 0, 0);\r\n        let endDate = new Date(post.endDate);\r\n        endDate.setHours(0, 0, 0, 0);\r\n        let yesterdayState = false;\r\n        let twoWeekAgoState = false;\r\n        let twoMonthAgoState = false;\r\n        let twoYearAgoState = false;\r\n        for (let index = 0; startDate <= endDate; index++) {\r\n          if (startDate.getDay() == yesterday.getDay()) {\r\n            yesterdayState = true;\r\n          } else if (startDate > twoWeekAgo) {\r\n            twoWeekAgoState = true;\r\n          } else if (startDate > twoMonthsAgo) {\r\n            twoMonthAgoState = true;\r\n          } else if (startDate > twoYearsAgo) {\r\n            twoYearAgoState = true;\r\n          }\r\n          startDate.setDate(startDate.getDate() + 1);\r\n        }\r\n        yesterdayQuantity =\r\n          yesterdayState == true ? yesterdayQuantity + 1 : yesterdayQuantity;\r\n        twoWeekAgoQuantity =\r\n          twoWeekAgoState == true ? twoWeekAgoQuantity + 1 : twoWeekAgoQuantity;\r\n        twoMonthsAgoQuantity =\r\n          twoMonthAgoState == true\r\n            ? twoMonthsAgoQuantity + 1\r\n            : twoMonthsAgoQuantity;\r\n        twoYearsAgoQuantity =\r\n          twoYearAgoState == true\r\n            ? twoYearsAgoQuantity + 1\r\n            : twoYearsAgoQuantity;\r\n        yesterdayState = false;\r\n        twoWeekAgoState = false;\r\n        twoMonthAgoState = false;\r\n        twoYearAgoState = false;\r\n      }\r\n    });\r\n\r\n    let propertiesComparison = {\r\n      yesterdayQuantity,\r\n      twoWeekAgoQuantity,\r\n      twoMonthsAgoQuantity,\r\n      twoYearsAgoQuantity,\r\n    };\r\n    return propertiesComparison;\r\n  };\r\n\r\n  return (\r\n    <ReportsContext.Provider\r\n      value={{\r\n        getPropertyWithLargestArea,\r\n        getPropertyWithLessArea,\r\n        getCustomerWithMoreProperties,\r\n        getRentedProperties,\r\n        getSoldProperties,\r\n        getAvailableProperties,\r\n        getInventories,\r\n        getPosts,\r\n        getNewProperties,\r\n        getNewCustomers,\r\n        getCustomersWithoutProperties,\r\n        propertiesFromDB,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ReportsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ReportsState;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport App from \"./App\";\r\nimport theme from \"./theme\";\r\nimport PropertiesState from \"./context/Properties/PropertiesState\";\r\nimport AuthState from \"./context/Auth/AuthState\";\r\nimport UsersState from \"./context/Users/UsersState\";\r\nimport CustomersState from \"./context/Customers/CustomersState\";\r\nimport ReportsState from \"./context/Reports/ReportsState\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider theme={theme}>\r\n      <PropertiesState>\r\n        <AuthState>\r\n          <UsersState>\r\n            <CustomersState>\r\n              <ReportsState>\r\n                <App />\r\n              </ReportsState>\r\n            </CustomersState>\r\n          </UsersState>\r\n        </AuthState>\r\n      </PropertiesState>\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createContext } from 'react';\r\n\r\nconst PropertiesContext = createContext({});\r\n\r\nexport default PropertiesContext;\r\n","import { createContext } from 'react';\r\n\r\nconst CustomersContext = createContext({});\r\n\r\nexport default CustomersContext;","import React from \"react\";\r\nimport { createStandaloneToast } from \"@chakra-ui/react\";\r\nimport theme from \"../../theme\";\r\n\r\nconst Notification = (title, description, status, duration) => {\r\n  const toast = createStandaloneToast({ theme: theme });\r\n\r\n  toast({\r\n    title: title,\r\n    description: description,\r\n    status: status,\r\n    duration: duration ? duration : 4000,\r\n    position: \"bottom\",\r\n    isClosable: true,\r\n  });\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Notification;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst config = {};\r\n\r\nconst theme = extendTheme({\r\n  config,\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {},\r\n    }),\r\n  },\r\n  colors: {\r\n    defaultColor: {\r\n      50: \"#E6E9F0\",\r\n      100: \"#C1C7D9\",\r\n      200: \"#98A2C0\",\r\n      300: \"#6E7DA6\",\r\n      400: \"#4F6193\",\r\n      500: \"#304580\",\r\n      600: \"#2B3E78\",\r\n      700: \"#24366D\",\r\n      800: \"#1E2E63\",\r\n      900: \"#131F50\",\r\n    },\r\n  },\r\n  components: {\r\n    Button: {\r\n      variants: {\r\n        solid: (props) => ({}),\r\n        color: {\r\n          _hover: { bg: \"#564A95\" },\r\n          _active: { bg: \"#564A95\" },\r\n        },\r\n        \"add-button\": {\r\n          bg: \"defaultColor.500\",\r\n          _hover: { bg: \"defaultColor.400\" },\r\n          color: \"#fff\",\r\n        },\r\n        \"add-button-dark\": {\r\n          bg: \"defaultColor.500\",\r\n          _hover: { bg: \"defaultColor.700\" },\r\n          color: \"#fff\",\r\n        },\r\n        \"add-button-clear\": {\r\n          bg: \"defaultColor.300\",\r\n          _hover: { bg: \"defaultColor.200\" },\r\n          color: \"#fff\",\r\n        },\r\n        \"confirm-add-button\": {\r\n          bg: \"defaultColor.300\",\r\n          _hover: { bg: \"defaultColor.200\" },\r\n          color: \"#fff\",\r\n        },\r\n        \"delete-button\": {\r\n          bg: \"#d63031\",\r\n          color: \"#fff\",\r\n          _hover: { bg: \"#f05657\" },\r\n        },\r\n        \"cancel-action\": {\r\n          border: \"2px solid #cbd5e0\",\r\n          color: \"#fff\",\r\n          _hover: { bg: \"rgba(0, 0, 0, 0.20)\" },\r\n        },\r\n        \"cancel-action-black\": {\r\n          border: \"2px solid #cbd5e0\",\r\n          color: \"#000\",\r\n          _hover: { bg: \"rgba(0, 0, 0, 0.20)\" },\r\n        },\r\n        \"reports-button\": {\r\n          bg: \"defaultColor.400\",\r\n          _hover: { bg: \"defaultColor.300\" },\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n    },\r\n    Badge: {\r\n      variants: {\r\n        \"required-error\": {\r\n          rounded: \"md\",\r\n          px: \"3\",\r\n          py: \"0.5\",\r\n          w: \"100%\",\r\n          mt: \"1.5\",\r\n          textAlign: \"center\",\r\n          bg: \"#9E6A72\",\r\n          color: \"#fff\",\r\n        },\r\n        \"required-warning\": {\r\n          rounded: \"md\",\r\n          px: \"3\",\r\n          py: \"0.5\",\r\n          w: \"100%\",\r\n          mt: \"1.5\",\r\n          textAlign: \"center\",\r\n          bg: \"#e17055\",\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n    },\r\n    Tooltip: {\r\n      baseStyle: {\r\n        borderRadius: \"5px\",\r\n        fontSize: \"13px\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { createContext } from \"react\";\r\n\r\nconst UsersContext = createContext({});\r\n\r\nexport default UsersContext;\r\n","import { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport default AuthContext;\r\n","import { createContext } from \"react\";\r\n\r\nconst ReportsContext = createContext({});\r\n\r\nexport default ReportsContext;\r\n"],"sourceRoot":""}